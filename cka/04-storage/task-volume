configure Pod to use a volume for storage
=========================================
redis.yaml
apiVersion: v1
kind: Pod
metadata:
  name: redis
spec:
  containers:
  - name: redis-ctr
    image: redis
    volumeMounts:
    - name: redis-storage
      mountPath: /data/redis
  volumes:
  - name: redis-storage
    emptyDir: {}
---
kubectl create -f redis.yaml
kubectl get pod redis --watch
kubectl exec -it redis -- /bin/bash
--
install ps 
apt-get update
apt-get install procps
---------------------------------------------------------------------------------------------
configure Pod to use Persistent volume for storage
==================================================
persistent volume is backed by storage
persistent volume claim is automatically bound to persistent volume
Pod specifies pvc as storage

minikube ssh 
sudo su
mkdir /mnt/data 
echo 'hello' > /mnt/data/index.html

create hostPath persistent volume

apiVersion: v1
kind: PersistentVolume
metadata: 
  name: pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi 
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
kubectl create -f pv.yaml
kubectl get pv pv-volume 
---
kind: PersistentVolumeClaim
apiVersion: v1 
metadata:
  name: pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
      storage: 3Gi
---
kubectl create -f pv-claim.yaml
kubectl get pvc pv-claim 
kubectl get pv pv-volume 
---
kind: Pod
apiVersion: v1
metadata:
  name: pv-pod 
spec:
  volumes:
  - name: pv-storage
    persistentVolumeClaim:
      claimName: pv-claim
  containers:
  - name: pv-ctr
    image: nginx
    ports:
    - containerPort: 80
      name: "http-server"
    volumeMounts:
    - mountPath: "/usr/share/nginx/html"
      name: pv-storage
--- 
kubectl create -f pv-pod.yaml
kubectl get pod pv-pod
kubectl exec -it pv-pod -- /bin/bash
apt-get update
apt-get install curl
curl localhost
---
storage configured with a GID, group id, allows writing only by Pods using same GID.
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv1 
  annotations:
    pv.beta.kubernetes.io/gid: "1234"
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi 
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---

---------------------------------------------------------------------------------------------
configure Pod to use a projected volume for storage
====================================================
mount several volumes in a shared directory
---
echo -n "admin" > ./username.txt
echo -n "1f2d1e2e67df" > ./password.txt

kubectl create secret generic user --from-file=./username.txt
kubectl create secret generic pass --from-file=./password.txt
---
kind: Pod
apiVersion: v1
metadata:
  name: projected-volume-pod 
spec:
  containers:
  - name: projected-volume-ctr
    image: busybox
    args:
    - sleep
    - "86400"
    volumeMounts:
    - name: all-in-one
      mountPath: "/projected-volume"
      readOnly: true
  volumes:
  - name: all-in-one
    projected:
      sources:
      - secret:
          name: user
      - secret:
          name: pass
---
kubectl create -f projected-volume-pod.yaml
kubectl get pod projected-volume-pod --watch
kubectl exec -it projected-volume-pod -- /bin/sh 
ls /projected-volume